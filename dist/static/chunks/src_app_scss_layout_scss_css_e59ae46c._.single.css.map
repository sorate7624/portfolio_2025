{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 1, "column": 0}, "map": {"version":3,"sources":["turbopack:///turbopack:///[project]/src/app/scss/Users/choehyejin/Downloads/pp/src/app/scss/reset.scss","turbopack:///turbopack:///[project]/src/app/scss/Users/choehyejin/Downloads/pp/src/app/scss/layout.scss","turbopack:///turbopack:///[project]/src/app/scss/Users/choehyejin/Downloads/pp/src/app/scss/_mixin.scss"],"sourcesContent":["// Root\r\n:root {\r\n  -webkit-tap-highlight-color: transparent;\r\n  text-size-adjust: none;\r\n  word-break: break-word;\r\n  overflow-wrap: break-word;\r\n  tab-size: 4;\r\n}\r\n\r\n*,\r\n::after,\r\n::before {\r\n  animation: none 0.3s ease-in-out-quart 0s 1 normal none running;\r\n  transition: none 0.3s ease-in-out-quart 0s;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  border-width: 0;\r\n  padding: 0;\r\n  color: inherit;\r\n  font: inherit;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n  height: 8px;\r\n  &-button {\r\n    display: none;\r\n  }\r\n  &-track {\r\n    margin: 0;\r\n    border: 0;\r\n    background: #e0e0e0;\r\n  }\r\n  &-thumb {\r\n    border: 1px solid #9e9e9e;\r\n    background: #bdbdbd;\r\n  }\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nstrong,\r\nem {\r\n  font-style: normal;\r\n}\r\n\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n}\r\n\r\nul,\r\nol,\r\nli {\r\n  list-style: none;\r\n}\r\n\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n\r\nbutton,\r\ninput,\r\ntextarea {\r\n  vertical-align: middle;\r\n  appearance: none;\r\n  outline-style: none;\r\n  border-radius: 0;\r\n  resize: none;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"password\"],\r\ninput[type=\"search\"],\r\ninput[type=\"email\"],\r\ninput[type=\"tel\"],\r\ntextarea {\r\n  border: 1px solid #9e9e9e;\r\n  background: transparent;\r\n}\r\n\r\nbutton,\r\ninput[type=\"button\"],\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n  cursor: pointer;\r\n  border: 0;\r\n  background: #e0e0e0;\r\n}\r\n","\n      @use \"sass:color\";\n      @use \"sass:list\"; \n      @use \"sass:map\";\n      @use \"sass:math\";\n      @use \"sass:meta\";\n      @use \"sass:selector\";\n      @use \"sass:string\";\n      @use \"scss/_function\" as *;\n      @use \"scss/_mixin\" as *;\n    \n@use \"scss/reset.scss\";\r\n\r\n// @import \"https://hangeul.pstatic.net/hangeul_static/css/nanum-gothic.css\";\r\n// @import \"https://hangeul.pstatic.net/hangeul_static/css/nanum-barun-gothic.css\";\r\n\r\nbody {\r\n  border: 0;\r\n  background: #fff;\r\n  padding: 0;\r\n  // font:\r\n  //   16px / 1.5 NanumGothic,\r\n  //   sans-serif;\r\n  &[data-scroll=\"false\"] {\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n// .floating {\r\n//   &-child {\r\n//     position: relative;\r\n//   }\r\n//   &,\r\n//   &-child > * {\r\n//     left: calc(50% + module-var(--left) - (module-var(--floating-base-width) / 2));\r\n//   }\r\n//   &,\r\n//   &-center,\r\n//   &-child > * {\r\n//     position: absolute;\r\n//     top: module-var(--top);\r\n//   }\r\n//   &-center,\r\n//   &-child > &-center {\r\n//     left: 50%;\r\n//     translate: calc(-50% + module-var(--left, 0px));\r\n//   }\r\n//   &-unset {\r\n//     position: unset;\r\n//     top: unset;\r\n//     left: unset;\r\n//     translate: unset;\r\n//   }\r\n// }\r\n\r\n.text-hidden {\r\n  @include text-hidden(false);\r\n}\r\n\r\n.absolute-full {\r\n  @include absolute-full;\r\n}\r\n\r\n.screen {\r\n  mix-blend-mode: screen;\r\n}\r\n","@use \"sass:color\";\r\n@use \"sass:list\";\r\n@use \"sass:map\";\r\n@use \"sass:math\";\r\n@use \"sass:meta\";\r\n@use \"sass:selector\";\r\n@use \"sass:string\";\r\n\r\n@use \"scss/function.scss\" as *;\r\n\r\n@mixin module-var($args...) {\r\n  $binds: list.nth($args, 1);\r\n  @if meta.type-of($binds) == map {\r\n    @each $key, $value in $binds {\r\n      $key: remove-var-prefix($key);\r\n      @if meta.type-of($value) == list {\r\n        @include module-var(--bind-#{$key}, list.nth($value, 1));\r\n      }\r\n    }\r\n    @each $key, $value in $binds {\r\n      $key: remove-var-prefix($key);\r\n      @if meta.type-of($value) == list {\r\n        @include module-var($key, module-var(--bind-#{$key}, list.nth($value, 2)));\r\n      } @else {\r\n        @include module-var($key, $value);\r\n      }\r\n    }\r\n  } @else {\r\n    $key: list.nth($args, 1);\r\n    $value: list.nth($args, 2);\r\n    #{module-var-name($key)}: #{$value};\r\n  }\r\n}\r\n\r\n@mixin locale($locale) {\r\n  .#{$locale} & {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin floating($top: false, $left: false) {\r\n  @if $top != false {\r\n    @include module-var(\r\n      (\r\n        --top: #{add-px($top)},\r\n      )\r\n    );\r\n  }\r\n  @if $left != false {\r\n    @include module-var(\r\n      (\r\n        --left: #{add-px($left)},\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n@mixin text-hidden($overflow: true) {\r\n  @if $overflow == true {\r\n    overflow: hidden !important;\r\n    text-indent: -10000em !important;\r\n  } @else {\r\n    color: transparent !important;\r\n    font-size: 0 !important;\r\n    line-height: 0 !important;\r\n    letter-spacing: 0 !important;\r\n  }\r\n}\r\n\r\n@mixin absolute-full {\r\n  position: absolute;\r\n  inset: 0;\r\n}\r\n\r\n@mixin image-width($path) {\r\n  width: map.get(get-image-data($path), \"width\");\r\n}\r\n\r\n@mixin image-height($path) {\r\n  height: map.get(get-image-data($path), \"height\");\r\n}\r\n\r\n@mixin image-size($path, $overload: ()) {\r\n  $image-data: get-image-data($path);\r\n  @if map.get($overload, \"size\") != false {\r\n    @if map.get($overload, \"width\") != false {\r\n      @if map.get($overload, \"width\") {\r\n        width: map.get($overload, \"width\");\r\n      } @else {\r\n        width: map.get($image-data, \"width\");\r\n      }\r\n    }\r\n    @if map.get($overload, \"height\") != false {\r\n      @if map.get($overload, \"height\") {\r\n        height: map.get($overload, \"height\");\r\n      } @else {\r\n        height: map.get($image-data, \"height\");\r\n      }\r\n    }\r\n  }\r\n  @content ($image-data);\r\n}\r\n\r\n@mixin background($background, $options: no-repeat 0 0, $overload: ()) {\r\n  $overload: merge-map(\r\n    (\r\n      size: false,\r\n    ),\r\n    $overload\r\n  );\r\n  $options: if($options == center, no-repeat center, $options);\r\n  $background-property: get-background-property($background, $options);\r\n  $color: map.get($background-property, \"color\");\r\n  $background-image: map.get($background-property, \"image\");\r\n  @if $options == false {\r\n    @if $color != false {\r\n      background-color: $color;\r\n    }\r\n    @if $background-image != false {\r\n      background-image: url($background-image);\r\n    }\r\n  } @else {\r\n    background: map.get($background-property, \"property\");\r\n  }\r\n  @include image-size($background-image, $overload) using ($image-data) {\r\n    @content ($image-data);\r\n  }\r\n}\r\n\r\n@mixin background-image($background) {\r\n  @include background(\r\n      $background,\r\n      false,\r\n      (\r\n        size: false,\r\n      )\r\n    )\r\n    using ($image-data) {\r\n    @content ($image-data);\r\n  }\r\n}\r\n\r\n@mixin background-image-hover(\r\n  $normal-background,\r\n  $hover-background,\r\n  $options: false,\r\n  $transition: true,\r\n  $overload: false\r\n) {\r\n  $overload: merge-map(\r\n    (\r\n      size: false,\r\n    ),\r\n    $overload\r\n  );\r\n  @include fit-background-hover(\r\n      $normal-background,\r\n      $hover-background,\r\n      $options,\r\n      $transition,\r\n      $overload\r\n    )\r\n    using ($image-data) {\r\n    @content ($image-data);\r\n  }\r\n}\r\n\r\n@mixin fit-background($background, $options: (), $overload: ()) {\r\n  $overload: merge-map(\r\n    (\r\n      size: true,\r\n    ),\r\n    $overload\r\n  );\r\n  @include background($background, $options, $overload) using ($image-data) {\r\n    @content ($image-data);\r\n  }\r\n}\r\n\r\n@mixin fit-background-center($background, $options: center 0, $overload: false) {\r\n  $overload: merge-map(\r\n    (\r\n      width: false,\r\n    ),\r\n    $overload\r\n  );\r\n  @include fit-background($background, $options, $overload) using ($image-data) {\r\n    @content ($image-data);\r\n  }\r\n}\r\n\r\n@mixin fit-background-hover(\r\n  $normal-background,\r\n  $hover-background,\r\n  $options: (),\r\n  $transition: true,\r\n  $overload: false\r\n) {\r\n  $overload: merge-map((), $overload);\r\n  $hover-background-property: get-background-property($hover-background);\r\n  $transition-property: background;\r\n  @if not $transition {\r\n    $transition-property: ();\r\n  } @else {\r\n    @if $transition != true {\r\n      $transition-property: list.append($transition-property, $transition, $separator: \"comma\");\r\n    }\r\n  }\r\n  @include fit-background($normal-background, $options, $overload) using ($image-data) {\r\n    @if list.length($transition-property) > 0 {\r\n      transition-property: $transition-property;\r\n    }\r\n    &:hover {\r\n      @include background-image($hover-background);\r\n      @content ($image-data);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin ripple($color, $duration: 0.5s) {\r\n  @include module-var(\r\n    (\r\n      --ripple-color: #{$color},\r\n      --ripple-duration: #{$duration},\r\n    )\r\n  );\r\n}\r\n"],"names":[],"mappings":"AACA;;;;;;;;;;AAQA;;;;;;;;;;;;AAaA;;;;;AAGE;;;;AAGA;;;;;;AAKA;;;;;AAMF;;;;AAIA;;;;AAKA;;;;AAIA;;;;AAIA;;;;AAMA;;;;;AASA;;;;;;;;;;AAUA;;;;;AAUA;;;;;;AA3EA;;;;;;AAOE;;;;AAKF;;;;AA+BA;;;;;;;AAIA;;;;;;;;AAIA"}}]
}